// Standard library adder component
entity std_adder<const WIDTH: usize> {
    in a: bit<WIDTH>;
    in b: bit<WIDTH>;
    in carry_in: bit;
    out sum: bit<WIDTH>;
    out carry_out: bit;
    out overflow: bit;
}

impl std_adder {
    signal extended_sum: bit<WIDTH+1>;
    
    extended_sum = {1'b0, a} + {1'b0, b} + carry_in;
    
    sum = extended_sum[WIDTH-1:0];
    carry_out = extended_sum[WIDTH];
    
    // Overflow detection for signed arithmetic
    overflow = (a[WIDTH-1] == b[WIDTH-1]) && (sum[WIDTH-1] != a[WIDTH-1]);
    
    // Verification
    assert property (extended_sum == a + b + carry_in);
}
