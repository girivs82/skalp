{
  "permissions": {
    "allow": [
      "Bash(cargo init:*)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test:*)",
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(git add:*)",
      "Bash(cargo fix:*)",
      "Bash(./target/debug/skalp:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(./target/release/skalp compile examples/advanced_types.sk -o /tmp/advanced_types.sv)",
      "Bash(./target/release/skalp --help)",
      "Bash(./target/release/skalp build:*)",
      "Bash(../target/release/skalp build)",
      "Read(//tmp/enum_debug/**)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp new struct_test)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp new enum_test)",
      "Bash(rustc:*)",
      "Bash(./test_counter_gpu)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp build -s /tmp/test_counter.sk -o /tmp/build)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp sim --help)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp:*)",
      "Bash(./debug_sir_detailed)",
      "Bash(./target/debug/deps/debug_context_tracking-*)",
      "Bash(./target/debug/deps/test_pipelined_processor-*)",
      "Bash(test_pipelined_processor_gpu:*)",
      "WebSearch",
      "Bash(cargo:*)",
      "Bash(RUST_LOG=debug ./target/release/skalp build:*)",
      "Bash(timeout:*)",
      "Bash(./target/release/skalp:*)",
      "Bash(python3:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_two_arms.sk -o /tmp/test_match_two_arms_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_two_arms.sk -o /tmp/test_match_two_arms_out -t mir)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s examples/alu.sk -o /tmp/alu_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_simple_match.sk -o /tmp/test_simple_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_simple_match.sk -o /tmp/test_simple_out 2)",
      "Bash(1)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s examples/alu.sk -o /tmp/alu_out -t mir)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_multi_match.sk -o /tmp/test_multi_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_with_slice.sk -o /tmp/test_match_slice_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_shift_slice.sk -o /tmp/test_shift_slice_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_overflow.sk -o /tmp/test_overflow_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_three_and_not.sk -o /tmp/test_three_and_not_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_and_with_index.sk -o /tmp/test_and_with_index_out)",
      "Bash(for:*)",
      "Bash(do echo \"=== $pkg ===\")",
      "Bash(done)",
      "Bash(git commit:*)",
      "Bash(SKALP_UPDATE_GOLDEN=1 cargo test --test golden_file_tests)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test --test golden_file_tests)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh api:*)",
      "Bash(git push:*)",
      "Bash(tee:*)",
      "Bash(paste:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(rg:*)",
      "Bash(head:*)"
    ],
    "deny": [],
    "ask": []
  }
}