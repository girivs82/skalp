{
  "permissions": {
    "allow": [
      "Bash(cargo init:*)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test:*)",
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(git add:*)",
      "Bash(cargo fix:*)",
      "Bash(./target/debug/skalp:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(./target/release/skalp compile examples/advanced_types.sk -o /tmp/advanced_types.sv)",
      "Bash(./target/release/skalp --help)",
      "Bash(./target/release/skalp build:*)",
      "Bash(../target/release/skalp build)",
      "Read(//tmp/enum_debug/**)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp new struct_test)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp new enum_test)",
      "Bash(rustc:*)",
      "Bash(./test_counter_gpu)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp build -s /tmp/test_counter.sk -o /tmp/build)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp sim --help)",
      "Bash(/Users/girivs/src/hw/hls/target/release/skalp:*)",
      "Bash(./debug_sir_detailed)",
      "Bash(./target/debug/deps/debug_context_tracking-*)",
      "Bash(./target/debug/deps/test_pipelined_processor-*)",
      "Bash(test_pipelined_processor_gpu:*)",
      "WebSearch",
      "Bash(cargo:*)",
      "Bash(RUST_LOG=debug ./target/release/skalp build:*)",
      "Bash(timeout:*)",
      "Bash(./target/release/skalp:*)",
      "Bash(python3:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_two_arms.sk -o /tmp/test_match_two_arms_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_two_arms.sk -o /tmp/test_match_two_arms_out -t mir)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s examples/alu.sk -o /tmp/alu_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_simple_match.sk -o /tmp/test_simple_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_simple_match.sk -o /tmp/test_simple_out 2)",
      "Bash(1)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s examples/alu.sk -o /tmp/alu_out -t mir)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_multi_match.sk -o /tmp/test_multi_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_with_slice.sk -o /tmp/test_match_slice_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_shift_slice.sk -o /tmp/test_shift_slice_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_overflow.sk -o /tmp/test_overflow_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_three_and_not.sk -o /tmp/test_three_and_not_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_and_with_index.sk -o /tmp/test_and_with_index_out)",
      "Bash(for:*)",
      "Bash(do echo \"=== $pkg ===\")",
      "Bash(done)",
      "Bash(git commit:*)",
      "Bash(SKALP_UPDATE_GOLDEN=1 cargo test --test golden_file_tests)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test --test golden_file_tests)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh run watch:*)",
      "Bash(gh api:*)",
      "Bash(git push:*)",
      "Bash(tee:*)",
      "Bash(paste:*)",
      "WebFetch(domain:docs.rs)",
      "Bash(do echo \"=== $f ===\")",
      "Bash(rg:*)",
      "Bash(head:*)",
      "Bash(git checkout:*)",
      "Bash(export HOMEBREW_NO_AUTO_UPDATE=1)",
      "Bash(brew list:*)",
      "Bash(/dev/null)",
      "Bash(brew install:*)",
      "Bash(./scripts/ci_check.sh:*)",
      "Read(//opt/homebrew/Cellar/z3/**)",
      "Bash(export:*)",
      "Bash(echo:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp new test_sv_gen)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test test_alu_codegen_golden)",
      "Read(//private/tmp/**)",
      "Bash(rustup:*)",
      "Bash(xargs:*)",
      "Bash(grep:*)",
      "Bash(/tmp/test_match_debug:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s examples/alu.sk -o /tmp/alu_test)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_match_with_if.sk -o /tmp/test_match_with_if_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bin_width.sk -o /tmp/test_bin_width_debug -t mir)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bin_width.sk -o /tmp/test_bin_width_debug2)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bin_width.sk -o /tmp/test_bin_width_debug3)",
      "Bash(iverilog:*)",
      "Bash(/tmp/debug_alu_sir:*)",
      "Bash(awk:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --test test_synthesis_optimization test_full_synthesis_flow -- --ignored --nocapture)",
      "Bash(/tmp/test_parse:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_trait.sk -o /tmp/test_trait_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_trait_impl.sk -o /tmp/test_trait_impl_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_self_simple.sk -o /tmp/test_self_simple_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_self_type.sk -o /tmp/test_self_type_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_trait_impl_signal.sk -o /tmp/test_trait_impl_signal_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_trait_return.sk -o /tmp/test_trait_return_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_trait_return2.sk -o /tmp/test_trait_return2_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_entity_return.sk -o /tmp/test_entity_return_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_entity_generic.sk -o /tmp/test_entity_generic_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_entity_generic2.sk -o /tmp/test_entity_generic2_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_entity_generic3.sk -o /tmp/test_entity_generic3_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /Users/girivs/src/hw/hls/examples/fifo.sk -o /tmp/fifo_test_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bit_angle.sk -o /tmp/test_bit_angle_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bit_angle2.sk -o /tmp/test_bit_angle2_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bit_literal.sk -o /tmp/test_bit_literal_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_bit_generic.sk -o /tmp/test_bit_generic_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /Users/girivs/src/hw/hls/examples/fifo.sk -o /tmp/fifo_final_test)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_array_generic.sk -o /tmp/test_array_generic_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_array_simple.sk -o /tmp/test_array_simple_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_array_simple2.sk -o /tmp/test_array_simple2_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_const_expr.sk -o /tmp/test_const_expr_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_simple_width.sk -o /tmp/test_simple_width_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_arith_width.sk -o /tmp/test_arith_width_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_param_width.sk -o /tmp/test_param_width_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_concrete_arith.sk -o /tmp/test_concrete_arith_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_clog2.sk -o /tmp/test_clog2_out)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build -s /tmp/test_clog2_calc.sk -o /tmp/test_clog2_calc_out)",
      "Bash(perl:*)",
      "Bash(/Users/girivs/src/hw/hls/target/debug/skalp build:*)",
      "Bash(SKALP_DUMP_MIR=1 cargo test --test test_simulation_suite test_fifo_operations --all-features -- --ignored --nocapture)",
      "Bash(env SKALP_DUMP_MIR=1 cargo test --test test_simulation_suite test_fifo_operations --all-features -- --ignored --nocapture)",
      "Bash(/tmp/debug_fifo_count:*)",
      "Bash(./dump_signal_order)",
      "Bash(RUST_BACKTRACE=1 cargo test test_milestone4_comprehensive --all-features -- --ignored --nocapture)",
      "Bash(RUST_BACKTRACE=1 cargo test --test test_milestone4_complete test_milestone4_comprehensive)",
      "Bash(RUST_LOG=debug ./target/debug/skalp build:*)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test test_comparison_in_if_golden)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test --test golden_file_tests test_comparison_in_if_golden)",
      "Bash(do echo \"Testing: $test\" timeout 5 cargo test --test test_language_features $test -- --nocapture)",
      "Bash(env RUST_BACKTRACE=1 /Users/girivs/src/hw/hls/target/debug/skalp build:*)",
      "Bash(do echo \"Testing: $example\")",
      "Bash(while read f)",
      "Bash(do echo \"Testing: $f\")",
      "Bash(./debug_slice_match)",
      "Bash(./test_simple_index)",
      "Bash(RUST_BACKTRACE=1 ./test_simple_index)",
      "WebFetch(domain:doc.veryl-lang.org)",
      "Bash(RUST_LOG=debug /Users/girivs/src/hw/hls/target/debug/skalp build:*)",
      "Bash(/tmp/debug_vec2_mir:*)",
      "Bash(env SKALP_UPDATE_GOLDEN=1 cargo test --test test_stdlib_vec)",
      "Bash(git log:*)",
      "Bash(RUST_BACKTRACE=1 cargo test --test test_vec_arithmetic test_vec2_component_addition_cpu --all-features -- --nocapture)",
      "Bash(env RUST_BACKTRACE=1 cargo test --test test_vec_arithmetic test_vec2_component_addition_cpu --all-features -- --nocapture)",
      "Bash(RUST_LOG=error /Users/girivs/src/hw/hls/target/release/skalp build:*)",
      "Bash(RUST_LOG=debug /Users/girivs/src/hw/hls/target/release/skalp build:*)",
      "Bash(do echo \"=== Testing: $example ===\" /Users/girivs/src/hw/hls/target/debug/skalp build -s \"$example\" -o /tmp/test_out)",
      "Bash(git reset:*)",
      "Bash(git restore:*)"
    ],
    "deny": [],
    "ask": []
  }
}
