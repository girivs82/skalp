name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version from tag
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: SKALP ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            # SKALP Release ${{ steps.get_version.outputs.version }}

            ## What's New

            See CHANGELOG.md for detailed changes.

            ## Installation

            ### Pre-built Binaries

            Download the appropriate binary for your platform from the assets below.

            ### From Source

            ```bash
            cargo install --git https://github.com/YOUR_ORG/skalp --tag v${{ steps.get_version.outputs.version }}
            ```

            ## Supported Platforms

            - Linux (x86_64)
            - macOS (x86_64, ARM64)
            - Windows (x86_64)

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: skalp
            asset_name: skalp-linux-x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: skalp
            asset_name: skalp-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: skalp
            asset_name: skalp-macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: skalp.exe
            asset_name: skalp-windows-x86_64.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Strip binary (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: strip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/octet-stream

  publish-crate:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_TOKEN }}
        continue-on-error: true
